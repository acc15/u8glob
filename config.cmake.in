@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/u8glob-targets.cmake")

if(WIN32)
    function(copy_dll_to_target_dir dll_regex target)
        add_custom_command(
            TARGET ${target}
            POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E copy_if_different 
                $<LIST:FILTER,$<TARGET_RUNTIME_DLLS:${target}>,INCLUDE,${dll_regex}> 
                $<TARGET_FILE_DIR:${target}>
        )
    endfunction()

    function(list_has_any var list variants)
        message("var ${var} list ${list} variants ${variants}")
        if(NOT "${variants}")
            set(${var} TRUE PARENT_SCOPE)
            return()
        endif()
        foreach(variant ${variants})
            if ("${variant}" IN_LIST list)
                set(${var} TRUE PARENT_SCOPE)
                return()
            endif()
        endforeach()
        set(${var} FALSE PARENT_SCOPE)
    endfunction()

    function(copy_dll_to_executables dll_regex lib_names) 
        get_directory_property(dir_targets BUILDSYSTEM_TARGETS)
        foreach(target ${dir_targets})
            get_target_property(target_type ${target} TYPE)
            if(target_type STREQUAL EXECUTABLE)
                get_target_property(target_libs ${target} LINK_LIBRARIES)
                list_has_any(target_has_lib "${target_libs}" "${lib_names}")
                if(target_has_lib)
                    copy_dll_to_target_dir(${dll_regex} ${target})
                endif()
            endif()
        endforeach()
    endfunction()

    cmake_language(DEFER CALL copy_dll_to_executables /u8globd?\.dll$ "u8glob;u8glob::u8glob")
endif()

check_required_components(u8glob)